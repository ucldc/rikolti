# rikolti notifications
export RIKOLTI_EVENTS_SNS_TOPIC=                                    # ask for the topic ARN

# metadata versions
export RIKOLTI_DATA=file:///usr/local/airflow/rikolti_data

# metadata_fetcher
export NUXEO=                                                       # ask for a key - required to run the NuxeoFetcher
export FLICKR_API_KEY=                                              # ask for a key - required to run the FlickrFetcher
export CALISPHERE_ETL_TOKEN=                                        # ask for token - required to run Calisphere Solr Fetcher

# metadata_mapper
export SKIP_UNDEFINED_ENRICHMENTS=True

# validator
# export UCLDC_SOLR_URL="https://harvest-stg.cdlib.org/solr_api"    # this is solr stage
export UCLDC_SOLR_URL="https://solr.calisphere.org/solr"            # this is solr prod
export UCLDC_SOLR_API_KEY=                                          # ask for a key
# export UCLDC_COUCH_URL="https://harvest-stg.cdlib.org/"           # this is couch stage
export UCLDC_COUCH_URL="https://harvest-prd.cdlib.org/"             # this is couch prod

# content_harvester when run locally via aws_mwaa_local_runner
# export METADATA_MOUNT=/<path on local host>/rikolti_data          # required to run content harvester as docker operator in mwaa-local-runner
# export CONTENT_MOUNT=/<path on local host>/rikolti_content        # required to run content harvester as docker operator in mwaa-local-runner
# export CONTAINER_EXECUTION_ENVIRONMENT="ecs"                      # default is docker
# export CONTENT_HARVEST_IMAGE="rikolti/content_harvester"          # default is public ECR name
# export MOUNT_CODEBASE=<path on local host to rikolti repo>        # default is source code built into image

# content_harvester
export NUXEO_USER=                                                  # ask for a user/pass - required to fetch Nuxeo Content
export NUXEO_PASS=
export RIKOLTI_CONTENT=file:///usr/local/airflow/rikolti_content
export CONTENT_COMPONENT_CACHE=                                     # s3://<bucket-name>/<optional_prefix>

# indexer
export OPENSEARCH_ENDPOINT=                                         # ask for endpoint url
export RIKOLTI_HOME=/usr/local/airflow/dags/rikolti

# indexer when run locally via aws-mwaa-local-runner
# export AWS_ACCESS_KEY_ID=
# export AWS_SECRET_ACCESS_KEY=
# export AWS_SESSION_TOKEN=
# export AWS_REGION=us-west-2